AWSTemplateFormatVersion: "2010-09-09"
Description: "CFT Template for creation of AWS Config Rule"
Parameters:
  webACLId:
    Type: "String"
    Default: "fms-shield-resource-policy-check"
    Description: "The name that you assign to the AWS Config rule."
  resourceTypes:
    Type: "String"
    Default: "The WebACLId of the web ACL."
    Description:  "The resource scope which this config rule will be applied to."
  resourceTags:
    Type: "String"
    Default: ""
    Description: "The resource tags that the rule should be associated with (for example, { \"tagKey1\" : [\"tagValue1\"], \"tagKey2\" : [\"tagValue2\", \"tagValue3\"] })."
  excludeResourceTags:
    Type: "String"
    Default: ""
    Description: "If true, exclude the resources that match the resourceTags. If false, include all the resources that match the resourceTags."
  fmsManagedToken:
    Type: "String"
    Default: ""
    Description: "A token generated by AWS Firewall Manager when creating the rule in your account. AWS Config ignores this parameter when you create this rule."
  fmsRemediationEnabled:
    Type: "String"
    Default: ""
    Description: "If true, AWS Firewall Manager will update NON_COMPLIANT resources according to FMS policy. AWS Config ignores this parameter when you create this rule."
  ruleGroups:
    Type: "String"
    Default: ""
    Description: "Comma-separated list of RuleGroupIds and WafOverrideAction pairs. (for example, ruleGroupId-1:NONE, ruleGroupId2:COUNT)"
  CentralMonitoringAccount:
    Type: "String"
    Default: ""
    Description: "Comma separated list of AWS Accounts (12-digit) where Amazon GuardDuty results are allowed to be centralized."
  blockedActionsPatterns:
    Type: "String"
    Default: ""
    Description: "Comma-separated list of blocked KMS action patterns, for example, kms:*, kms:Decrypt, kms:ReEncrypt*."
  excludePermissionBoundaryPolicy:
    Type: "String"
    Default: ""
    Description: "Boolean flag to exclude the evaluation of IAM policies used as permissions boundaries. If set to \u0027true\u0027, the rule will not include permissions boundaries in the evaluation. Otherwise, all IAM policies in scope are evaluated when value is set to \u0027false.\u0027 Default value is \u0027false\u0027."
  excludeRoleByManagementAccount:
    Type: "String"
    Default: ""
    Description: "Exclude a role if it is only assumable by organization management account."

  RequireUppercaseCharacters:
    Type: "String"
    Default: "true"
    Description: "Require at least one uppercase character in password."
  RequireLowercaseCharacters:
    Type: "String"
    Default: "true"
    Description:  "Require at least one lowercase character in password."
  RequireSymbols:
    Type: "String"
    Default: "true"
    Description: "Require at least one symbol in password."
  RequireNumbers:
    Type: "String"
    Default: "true"
    Description: "Require at least one number in password."
  MinimumPasswordLength:
    Type: "String"
    Default: "14"
    Description: "Password minimum length."
  PasswordReusePrevention:
    Type: "String"
    Default: "24"
    Description: "Number of passwords before allowing reuse."
  MaxPasswordAge:
    Type: "String"
    Default: "90"
    Description: "Number of days before password expiration."
  policyArns:
    Type: "String"
    Default: "24"
    Description: "Comma separated list of IAM policy arns which should not be attached to any IAM entity."
  exceptionList:
    Type: "String"
    Default: "90"
    Description: "Comma separated list of resourcetypes and list of resource name pairs. (for example, users:[user1;user2], groups:[group1;group2], roles:[role1;role2;role3])."


Conditions:
  FMSFieldResourcePolicyCheckedCondition: !And
    - !Not [!Equals [!Ref webACLId, ""]]
    - !Not [!Equals [!Ref resourceTypes, ""]]
    - !Not [!Equals [!Ref resourceTags, ""]]
    - !Not [!Equals [!Ref excludeResourceTags, ""]]
    - !Not [!Equals [!Ref fmsManagedToken, ""]]
    - !Not [!Equals [!Ref fmsRemediationEnabled, ""]]
  FMSWebACLResourcePolicyCheckCondition: !And
    - !Not [!Equals [!Ref webACLId, ""]]
    - !Not [!Equals [!Ref resourceTags, ""]]
    - !Not [!Equals [!Ref excludeResourceTags, ""]]
    - !Not [!Equals [!Ref fmsManagedToken, ""]]
    - !Not [!Equals [!Ref fmsRemediationEnabled, ""]]
  FMSWebACLRRuleGroupAssociationCheckCondition: !And
    - !Not [!Equals [!Ref ruleGroups, ""]]
    - !Not [!Equals [!Ref fmsManagedToken, ""]]
    - !Not [!Equals [!Ref fmsRemediationEnabled, ""]]
  GuardDutyEnabledCentralizedCheckCondition: !And
    - !Not [!Equals [!Ref CentralMonitoringAccount, ""]]
  IAMCustomerPolicyBlockedActionCheckCondition: !And
    - !Not [!Equals [!Ref blockedActionsPatterns, ""]]
    - !Not [!Equals [!Ref excludePermissionBoundaryPolicy, ""]]
  IAMInlinePolicyBlockedKMSActionCondition: !And
    - !Not [!Equals [!Ref blockedActionsPatterns, ""]]
    - !Not [!Equals [!Ref excludeRoleByManagementAccount, ""]]
  IAMNoInlinePolicyCheckCondition: !And
    - !Not [!Equals [!Ref RequireUppercaseCharacters, ""]]
    - !Not [!Equals [!Ref RequireLowercaseCharacters, ""]]
    - !Not [!Equals [!Ref RequireSymbols, ""]]
    - !Not [!Equals [!Ref RequireNumbers, ""]]
    - !Not [!Equals [!Ref MinimumPasswordLength, ""]]
    - !Not [!Equals [!Ref PasswordReusePrevention, ""]]
    - !Not [!Equals [!Ref MaxPasswordAge, ""]]
  IAMPolicyBlackListedCheckCondition: !And
    - !Not [!Equals [!Ref policyArns, ""]]
    - !Not [!Equals [!Ref exceptionList, ""]]

Resources: 
  FMSFieldResourcePolicyChecked: 
    Condition: FMSFieldResourcePolicyCheckedCondition
    Type: AWS::Config::ConfigRule
    Properties: 
      ConfigRuleName: "FMSFieldResourcePolicyChecked"
      Description:  "Checks whether an Application Load Balancer, Amazon CloudFront distributions, Elastic Load Balancer or Elastic IP has AWS Shield protection. It also checks if they have web ACL associated for Application Load Balancer and Amazon CloudFront distributions."
      InputParameters: |
        webACLId: !Ref webACLId
        resourceTypes: !Ref resourceTypes
        resourceTags: !Ref resourceTags
        excludeResourceTags: !Ref excludeResourceTags
        fmsManagedToken: !Ref fmsManagedToken
        fmsRemediationEnabled: !Ref fmsRemediationEnabled
      Scope:
        ComplianceResourceTypes: [
            "AWS::ElasticLoadBalancingV2::LoadBalancer",
            "AWS::WAFRegional::WebACL",
            "AWS::EC2::EIP",
            "AWS::ElasticLoadBalancing::LoadBalancer",
            "AWS::ShieldRegional::Protection",
            "AWS::Shield::Protection"
        ]
      Source:
        Owner: "AWS"
        SourceIdentifier: "FMS_SHIELD_RESOURCE_POLICY_CHECK"
  FMSWebACLResourcePolicyCheck: 
    Condition: FMSWebACLResourcePolicyCheckCondition
    Type: AWS::Config::ConfigRule
    Properties: 
      ConfigRuleName: "FMSWebACLResourcePolicyCheck"
      Description:  "Checks whether the web ACL is associated with Application Load Balancers, API Gateway stage or CloudFront distributions. When AWS Firewall Manager creates this rule, the FMS policy owner specifies the webACLId in the FMS policy."
      InputParameters: |
        webACLId: !Ref webACLId
        resourceTags: !Ref resourceTags
        excludeResourceTags: !Ref excludeResourceTags
        fmsManagedToken: !Ref fmsManagedToken
        fmsRemediationEnabled: !Ref fmsRemediationEnabled
      Scope:
        ComplianceResourceTypes: [
            "AWS::CloudFront::Distribution",
            "AWS::ApiGateway::Stage",
            "AWS::ElasticLoadBalancingV2::LoadBalancer",
            "AWS::WAFRegional::WebACL"
        ]
      Source:
        Owner: "AWS"
        SourceIdentifier: "FMS_WEBACL_RESOURCE_POLICY_CHECK"
  FMSWebACLRRuleGroupAssociationCheck: 
    Condition: FMSWebACLRRuleGroupAssociationCheckCondition
    Type: AWS::Config::ConfigRule
    Properties: 
      ConfigRuleName: "FMSWebACLRRuleGroupAssociationCheck"
      Description:  "Checks whether the RuleGroupId and WafOverrideAction pairs are associated with the WebACL at highest priority. When AWS Firewall manager creates this rule, the FMS policy owner specifies the ruleGroups in the policy and can optionally enable remediation."
      InputParameters: |
        ruleGroups: !Ref ruleGroups
        fmsManagedToken: !Ref fmsManagedToken
        fmsRemediationEnabled: !Ref fmsRemediationEnabled
      Scope:
        ComplianceResourceTypes: [
          "AWS::WAF::WebACL",
          "AWS::WAFRegional::WebACL"
        ]
      Source:
        Owner: "AWS"
        SourceIdentifier: "FMS_WEBACL_RULEGROUP_ASSOCIATION_CHECK"
  GuardDutyEnabledCentralizedCheck: 
    Condition: GuardDutyEnabledCentralizedCheckCondition
    Type: AWS::Config::ConfigRule
    Properties: 
      ConfigRuleName: "GuardDutyEnabledCentralizedCheck"
      Description:  "Checks whether GuardDuty is enabled. You can optionally verify that the results are centralized in a specific AWS Account."
      InputParameters: |
        CentralMonitoringAccount: !Ref CentralMonitoringAccount
      Source:
        Owner: "AWS"
        SourceIdentifier: "GUARDDUTY_ENABLED_CENTRALIZED"
  IAMCustomerPolicyBlockedActionCheck: 
    Condition: IAMCustomerPolicyBlockedActionCheckCondition
    Type: AWS::Config::ConfigRule
    Properties: 
      ConfigRuleName: "IAMCustomerPolicyBlockedActionCheck"
      Description:  "Checks that the managed AWS Identity and Access Management (IAM) policies that you create do not allow blocked actions on all AWS KMS keys. The rule is NON_COMPLIANT if any blocked action is allowed on all AWS KMS keys by the managed IAM policy."
      InputParameters: |
        blockedActionsPatterns: !Ref blockedActionsPatterns
        excludePermissionBoundaryPolicy: !Ref excludePermissionBoundaryPolicy
      Scope:
        ComplianceResourceTypes: [
          "AWS::IAM::Policy"
        ]
      Source:
        Owner: "AWS"
        SourceIdentifier: "IAM_CUSTOMER_POLICY_BLOCKED_KMS_ACTIONS"
  IAMGroupHasUserCheck: 
    Type: AWS::Config::ConfigRule
    Properties: 
      ConfigRuleName: "IAMGroupHasUserCheck"
      Description:  "Checks whether IAM groups have at least one IAM user."
      Scope:
        ComplianceResourceTypes: [
          "AWS::IAM::Group"
        ]
      Source:
        Owner: "AWS"
        SourceIdentifier: "IAM_GROUP_HAS_USERS_CHECK"
  IAMInlinePolicyBlockedKMSAction: 
    Type: AWS::Config::ConfigRule
    Condition: IAMInlinePolicyBlockedKMSActionCondition
    Properties: 
      ConfigRuleName: "IAMInlinePolicyBlockedKMSAction"
      Description:  "Checks that the inline policies attached to your IAM users, roles, and groups do not allow blocked actions on all AWS Key Management Service (KMS) keys. The rule is NON_COMPLIANT if any blocked action is allowed on all KMS keys in an inline policy."
      InputParameters: |
        blockedActionsPatterns: !Ref blockedActionsPatterns
        excludeRoleByManagementAccount: !Ref excludeRoleByManagementAccount
      Scope:
        ComplianceResourceTypes: [
            "AWS::IAM::Group",
            "AWS::IAM::Role",
            "AWS::IAM::User"
        ]
      Source:
        Owner: "AWS"
        SourceIdentifier: "IAM_INLINE_POLICY_BLOCKED_KMS_ACTIONS"
  IAMNoInlinePolicyCheck: 
    Type: AWS::Config::ConfigRule
    Condition: IAMNoInlinePolicyCheckCondition
    Properties: 
      ConfigRuleName: "IAMNoInlinePolicyCheck"
      Description:  "Checks that inline policy feature is not in use. The rule is NON_COMPLIANT if an AWS Identity and Access Management (IAM) user, IAM role or IAM group has any inline policy."
      Scope:
        ComplianceResourceTypes: [
            "AWS::IAM::Group",
            "AWS::IAM::Role",
            "AWS::IAM::User"
        ]
      Source:
        Owner: "AWS"
        SourceIdentifier: "IAM_NO_INLINE_POLICY_CHECK"
  IAMPolicyCheck: 
    Type: AWS::Config::ConfigRule
    Condition: IAMPolicyPolicyCondition
    Properties: 
      ConfigRuleName: "IAMPolicyPolicy"
      Description:  "Checks whether the account password policy for IAM users meets the specified requirements."
      InputParameters: |
        RequireUppercaseCharacters: !Ref RequireUppercaseCharacters
        RequireLowercaseCharacters: !Ref RequireLowercaseCharacters
        RequireSymbols: !Ref RequireSymbols
        RequireNumbers: !Ref RequireNumbers
        MinimumPasswordLength: !Ref MinimumPasswordLength
        PasswordReusePrevention: !Ref PasswordReusePrevention
        MaxPasswordAge: !Ref MaxPasswordAge
      Source:
        Owner: "AWS"
        SourceIdentifier: "IAM_PASSWORD_POLICY"
  IAMPolicyBlackListedCheck: 
    Type: AWS::Config::ConfigRule
    Condition: IAMPolicyBlackListedCheckCondition
    Properties: 
      ConfigRuleName: "IAMPolicyBlackListedCheck"
      Description:  "Checks that none of your IAM users, groups, or roles (excluding exceptionList) have the specified policies attached."
      InputParameters: |
        policyArns: !Ref policyArns
        exceptionList: !Ref exceptionList
      Scope:
        ComplianceResourceTypes: [
            "AWS::IAM::Group",
            "AWS::IAM::Role",
            "AWS::IAM::User"
        ]
      Source:
        Owner: "AWS"
        SourceIdentifier: "IAM_POLICY_BLACKLISTED_CHECK"